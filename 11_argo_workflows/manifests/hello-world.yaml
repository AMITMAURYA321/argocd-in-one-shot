apiVersion: argoproj.io/v1alpha1           # Specifies the API version for Argo Workflows
kind: Workflow                            # Declares this resource as a Workflow
metadata:
  generateName: hello-world-              # Prefix for the generated workflow name
  namespace: argo                         # Namespace where the workflow will run
spec:
  entrypoint: whalesay                    # Entry point template for the workflow
  templates:
  - name: whalesay                        # Defines the 'whalesay' template
    steps:                                # Specifies the steps in this template
    - - name: generate                    # First step: 'generate'
        template: gen-message             # Uses the 'gen-message' template
    - - name: print                       # Second step: 'print'
        template: print-message           # Uses the 'print-message' template
        arguments:
          parameters:
          - name: msg                     # Passes the 'msg' parameter
            value: "{{steps.generate.outputs.result}}"  # Value from previous step's output

  - name: gen-message                     # Defines the 'gen-message' template
    script:                               # Runs a script in a container
      image: python:3.9                   # Uses the Python 3.9 image
      command: ["python"]                 # Runs the Python interpreter
      source: |                           # Inline Python script
        print("hello from argo worklfow") # Prints a message to stdout
    # outputs -> this step returns stdout as result (used below)
  - name: print-message                   # Defines the 'print-message' template
    inputs:
      parameters:
      - name: msg                         # Expects a 'msg' parameter as input
    container:
      image: alpine:3.16                  # Uses the Alpine 3.16 image
      command: [sh, -c]                   # Runs a shell command
      args: ["echo Received message: {{inputs.parameters.msg}}"] # Prints the received message